project (Video_Miner)

cmake_minimum_required(VERSION 2.8.12.2)

#Packaging
find_package(PkgConfig)
find_package(OpenCV REQUIRED)
find_package( PythonLibs 2.7 REQUIRED )
find_package( PythonInterp 2.7 REQUIRED )
pkg_check_modules(TESSERACT REQUIRED tesseract)

if(PYTHONLIBS_FOUND)
	include_directories(${PYTHON_INCLUDE_DIRS})
endif()

include_directories(${TESSERACT_INCLUDE_DIRS})
link_directories(${TESSERACT_LIBRARY_DIRS})

#Set c++ compiler to c++11 
include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
if(COMPILER_SUPPORTS_CXX11)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
else()
	message(STATUS "The compiler ${CMAKE_CXX_COMPILER} requires C++11")
endif()

#Set sources
file(GLOB SOURCES "src/*.cpp")

#Set headers
include_directories(include)

#Linker directories
#link_directories(/home/pi/Pi_Car/tesseract/api)

#cpp source
file(GLOB SOURCES "src/*.cpp")

add_executable(vid_miner ${SOURCES} )

target_link_libraries(vid_miner ${OpenCV_LIBS} ${TESSERACT_LIBRARIES} ${PYTHON_LIBRARIES})
